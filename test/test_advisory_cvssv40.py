# coding: utf-8

"""
    VulnCheck API

    Version 3 of the VulnCheck API

    The version of the OpenAPI document: 3.0
    Contact: support@vulncheck.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from vulncheck_sdk.models.advisory_cvssv40 import AdvisoryCVSSV40

class TestAdvisoryCVSSV40(unittest.TestCase):
    """AdvisoryCVSSV40 unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AdvisoryCVSSV40:
        """Test AdvisoryCVSSV40
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AdvisoryCVSSV40`
        """
        model = AdvisoryCVSSV40()
        if include_optional:
            return AdvisoryCVSSV40(
                attack_complexity = '',
                attack_requirements = '',
                attack_vector = '',
                automatable = '',
                availability_requirements = '',
                base_score = 1.337,
                base_severity = '',
                confidentiality_requirements = '',
                exploit_maturity = '',
                integrity_requirements = '',
                modified_attack_complexity = '',
                modified_attack_requirements = '',
                modified_attack_vector = '',
                modified_privileges_required = '',
                modified_subsequent_system_availability = '',
                modified_subsequent_system_confidentiality = '',
                modified_subsequent_system_integrity = '',
                modified_user_interaction = '',
                modified_vulnerable_system_availability = '',
                modified_vulnerable_system_confidentiality = '',
                modified_vulnerable_system_integrity = '',
                privileges_required = '',
                provider_urgency = '',
                recovery = '',
                safety = '',
                subsequent_system_availability = '',
                subsequent_system_confidentiality = '',
                subsequent_system_integrity = '',
                user_interaction = '',
                value_density = '',
                vector_string = '',
                version = '',
                vulnerability_response_effort = '',
                vulnerable_system_availability = '',
                vulnerable_system_confidentiality = '',
                vulnerable_system_integrity = ''
            )
        else:
            return AdvisoryCVSSV40(
        )
        """

    def testAdvisoryCVSSV40(self):
        """Test AdvisoryCVSSV40"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
